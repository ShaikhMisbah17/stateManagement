// This slice file manages the tasks state.

import { createSlice } from '@reduxjs/toolkit'; // Import the createSlice function from Redux Toolkit, used to create a slice of the Redux state.

export const taskSlice = createSlice({ // Define and export a slice of the Redux state for managing tasks.
    name: 'tasks', // Assign a name to the slice, which is used in debugging and by Redux Toolkit internally.
    initialState: [], // Set the initial state of the slice to an empty array, expected to hold task objects.
    reducers: { // Define reducers within this slice to handle actions that modify the state.
        addTask: (state, action) => { // Reducer for adding a new task to the state.
            state.push({ ...action.payload, id: Date.now() }); // Push a new task object into the state array. The task object includes all properties from action.payload and a unique id generated using Date.now().
        },
        deleteTask: (state, action) => { // Reducer for deleting a task from the state.
            return state.filter(task => task.id !== action.payload); // Return a new state array containing all tasks except the one whose id matches action.payload.
        }
    },
});

export const { addTask, deleteTask } = taskSlice.actions; // Destructure and export the action creators generated for each reducer function defined in the slice.
export default taskSlice.reducer; // Export the reducer generated by createSlice, which handles actions defined in the reducers object.
